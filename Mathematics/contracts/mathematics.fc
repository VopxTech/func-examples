#include "imports/stdlib.fc";

global int ctx_counter;

() load_data() impure {
    var ds = get_data().begin_parse();

    ctx_counter = ds~load_uint(32);

    ds.end_parse();
}

() save_data() impure {
    set_data(
        begin_cell()
            .store_uint(ctx_counter, 32)
            .end_cell()
    );
}

;; Optimized binary exponentiation
(int) binpow (int n, int e) {
    if (e == 0) {
        return 1;
    }
    if (e == 1) {
        return n;
    }
    int p = binpow(n, e / 2);
    p *= p;
    if ((e % 2) == 1) {
        p *= n;
    }
    return p;
}

;; Modulo operations (32-bit version)
(int) modulo_operations (int xp, int zp) {  
    ;; Using a smaller prime that fits in 32 bits
    int prime = 4294967291; ;; 2^32 - 5 (a 32-bit prime)

    int xp_plus_zp = (xp + zp) % prime;
    int xp_minus_zp = (xp - zp + prime) % prime;
    return (xp_plus_zp * xp_minus_zp) % prime;
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) {
        return ();
    }

    load_data();

    int op = in_msg_body~load_uint(32);
    int input_number = in_msg_body~load_uint(32);

    ;; How to raise number to the power of n
    ;; Cookbook link: https://docs.ton.org/develop/func/cookbook#how-to-raise-number-to-the-power-of-n
    if (op == 1) {
        ctx_counter += binpow(input_number, 3);
        save_data();
        return ();
    }

    ;; How to generate random number
    ;; Cookbook link: https://docs.ton.org/develop/func/cookbook#how-to-generate-random-number
    ;; Random number generation: https://docs.ton.org/develop/smart-contracts/guidelines/random-number-generation
    if (op == 2) {
        randomize_lt(); ;; do this once
        int a = rand(10);

        ctx_counter += a;

        save_data();
        return ();
    }

    ;; How to get current time
    ;; Cookbook link: https://docs.ton.org/develop/func/cookbook#how-to-get-current-time
    if (op == 3) {
        int current_time = now();
        ctx_counter += current_time;

        save_data();
        return ();
    }

    ;; Modulo operations
    ;; Cookbook link: https://docs.ton.org/develop/func/cookbook#modulo-operations
    if (op == 4) {
        int xp = in_msg_body~load_uint(32);
        int zp = in_msg_body~load_uint(32);
        ctx_counter += modulo_operations(xp, zp);

        save_data();
        return ();
    }

    throw(777);
}

int get_counter() method_id {
    load_data();
    return ctx_counter;
}
